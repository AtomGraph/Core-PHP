<?php

/**
 *  Copyright 2011 Graphity Team
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 *  @package        graphity
 *  @author         Julius Šėporaitis <julius@graphity.org>
 *  @link           http://graphity.org/
 */

namespace Graphity;

/**
 * Some preinitialization that saves user some work.
 */
if(!defined('DS')) {
    define('DS', DIRECTORY_SEPARATOR);
}

if(!defined('PS')) {
    define('PS', PATH_SEPARATOR);
}

if(!defined('GRAPHITYDIR')) {
    define('GRAPHITYDIR', dirname(dirname(__FILE__)));
}

if(!class_exists('\\Graphity\\Loader')) {
    require_once(GRAPHITYDIR . DS . "Graphity" . DS . "Loader.php");
}

if(!class_exists('Annotation')) {
    require_once(GRAPHITYDIR . 
        DS . ".." . DS . ".." . DS . ".." .
        DS . "lib" . DS . "addendum" . DS . "lib" . DS . "annotations.php");

    // load Graphity related annotations
    set_include_path(get_include_path() . PS . 
        GRAPHITYDIR . DS . "Graphity" . DS . "Router" . DS . "Annotation");

    require_once("Path.php");
    require_once("Singleton.php");
}

/**
 * A simple bootstrapper for an application. It consumes an array generated by
 * bin/route_mapper.php and processes requests.
 */
class Application
{
    /**
     * @var \Graphity\Request $request
     */
    protected $request = null;

    /**
     * @var \Graphity\Router $router
     */
    protected $router = null;

    /**
     * Initializes application with the given route map.
     *
     * @param array $routeMap
     */
    public function __construct(array $routeMap)
    {
        $loader = new \Graphity\Loader("Graphity", GRAPHITYDIR);
        $loader->register();

        $this->request = new \Graphity\Request();
        $this->router = new \Graphity\Router($routeMap);
    }

    public function process()
    {
        try {
            $this->router->matchResource($this->request)->process();
        } catch(\Graphity\WebApplicationException $e) {
            throw $e;
        } catch(Exception $e) {
            // wrap all other Exceptions into WAE
            throw new \Graphity\WebApplicationException($e->getMessage(), $e->getCode(), $e);
        }
    }
}

